<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.EmployeeInfo.mapper.EmployeeMapper">
    
    <resultMap type="Employee" id="EmployeeResult">
        <result property="id"    column="id"    />
        <result property="idNumber"    column="id_number"    />
        <result property="name"    column="name"    />
        <result property="gender"    column="gender"    />
        <result property="birthDate"    column="birth_date"    />
        <result property="retirementDate"    column="retirement_date"    />
        <result property="department"    column="department"    />
        <result property="position"    column="position"    />
        <result property="isFormal"    column="is_formal"    />
        <result property="personType"    column="person_type"    />
    </resultMap>

    <sql id="selectEmployeeVo">
        select id, id_number, name, gender, birth_date, retirement_date, department, position, is_formal, person_type from employee
    </sql>

    <select id="selectEmployeeList" parameterType="Employee" resultMap="EmployeeResult">
        <include refid="selectEmployeeVo"/>
        <where>  
            <if test="idNumber != null  and idNumber != ''"> and id_number = #{idNumber}</if>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="gender != null  and gender != ''"> and gender = #{gender}</if>
            <if test="params.beginBirthDate != null and params.beginBirthDate != '' and params.endBirthDate != null and params.endBirthDate != ''"> and birth_date between #{params.beginBirthDate} and #{params.endBirthDate}</if>
            <if test="params.beginRetirementDate != null and params.beginRetirementDate != '' and params.endRetirementDate != null and params.endRetirementDate != ''"> and retirement_date between #{params.beginRetirementDate} and #{params.endRetirementDate}</if>
            <if test="department != null  and department != ''"> and department = #{department}</if>
            <if test="position != null  and position != ''"> and position = #{position}</if>
            <if test="isFormal != null  and isFormal != ''"> and is_formal = #{isFormal}</if>
            <if test="personType != null "> and person_type = #{personType}</if>
        </where>
    </select>
    
    <select id="selectEmployeeById" parameterType="Long" resultMap="EmployeeResult">
        <include refid="selectEmployeeVo"/>
        where id = #{id}
    </select>

    <insert id="insertEmployee" parameterType="Employee" useGeneratedKeys="true" keyProperty="id">
        insert into employee
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="idNumber != null and idNumber != ''">id_number,</if>
            <if test="name != null and name != ''">name,</if>
            <if test="gender != null and gender != ''">gender,</if>
            <if test="birthDate != null">birth_date,</if>
            <if test="retirementDate != null">retirement_date,</if>
            <if test="department != null and department != ''">department,</if>
            <if test="position != null and position != ''">position,</if>
            <if test="isFormal != null and isFormal != ''">is_formal,</if>
            <if test="personType != null">person_type,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="idNumber != null and idNumber != ''">#{idNumber},</if>
            <if test="name != null and name != ''">#{name},</if>
            <if test="gender != null and gender != ''">#{gender},</if>
            <if test="birthDate != null">#{birthDate},</if>
            <if test="retirementDate != null">#{retirementDate},</if>
            <if test="department != null and department != ''">#{department},</if>
            <if test="position != null and position != ''">#{position},</if>
            <if test="isFormal != null and isFormal != ''">#{isFormal},</if>
            <if test="personType != null">#{personType},</if>
         </trim>
    </insert>

    <update id="updateEmployee" parameterType="Employee">
        update employee
        <trim prefix="SET" suffixOverrides=",">
            <if test="idNumber != null and idNumber != ''">id_number = #{idNumber},</if>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="gender != null and gender != ''">gender = #{gender},</if>
            <if test="birthDate != null">birth_date = #{birthDate},</if>
            <if test="retirementDate != null">retirement_date = #{retirementDate},</if>
            <if test="department != null and department != ''">department = #{department},</if>
            <if test="position != null and position != ''">position = #{position},</if>
            <if test="isFormal != null and isFormal != ''">is_formal = #{isFormal},</if>
            <if test="personType != null">person_type = #{personType},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteEmployeeById" parameterType="Long">
        delete from employee where id = #{id}
    </delete>

    <delete id="deleteEmployeeByIds" parameterType="String">
        delete from employee where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>